{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/actions/contacts.actions.ts","webpack:///./src/app/add-edit-contacts/add-contact/add-contact.component.html","webpack:///./src/app/add-edit-contacts/add-contact/add-contact.component.scss","webpack:///./src/app/add-edit-contacts/add-contact/add-contact.component.ts","webpack:///./src/app/add-edit-contacts/add-edit-contacts.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/data-table/data-table.component.html","webpack:///./src/app/components/data-table/data-table.component.scss","webpack:///./src/app/components/data-table/data-table.component.ts","webpack:///./src/app/components/dynamic-form/dynamic-form.component.html","webpack:///./src/app/components/dynamic-form/dynamic-form.component.scss","webpack:///./src/app/components/dynamic-form/dynamic-form.component.ts","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.scss","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/reducers/contacts.ts","webpack:///./src/app/reducers/index.ts","webpack:///./src/app/reducers/ui.ts","webpack:///./src/app/reducers/utils.ts","webpack:///./src/app/services/contacts.service.ts","webpack:///./src/app/view-contacts/view-contacts-component/view-contacts.component.html","webpack:///./src/app/view-contacts/view-contacts-component/view-contacts.component.scss","webpack:///./src/app/view-contacts/view-contacts-component/view-contacts.component.ts","webpack:///./src/app/view-contacts/view-contacts.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export const NEW_CONTACT = 'NEW_CONTACT';\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\nexport const REMOVE_CONTACT = 'REMOVE_CONTACT';\nexport const SET_CONTACTS = 'SET_CONTACTS';\n\nexport function newContact(payload) {\n  return {\n    type: NEW_CONTACT,\n    payload\n  }\n}\n\n\nexport function updateContact(payload) {\n  return {\n    type: UPDATE_CONTACT,\n    payload\n  }\n}\n\n\nexport function removeContact(payload) {\n  return {\n    type: REMOVE_CONTACT,\n    payload\n  }\n}","module.exports = \"<div class=\\\"dynamic-form\\\">\\n  <app-dynamic-form [formSchema]=\\\"contact\\\" (submitForm)=\\\"onContactSave($event)\\\"></app-dynamic-form>\\n</div>\\n<button class=\\\"go-back-btn\\\" mat-raised-button routerLink=\\\"\\\">\\n  <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">arrow_back</mat-icon>\\n  Go Back\\n</button>\"","module.exports = \".go-back-btn {\\n  position: absolute;\\n  bottom: 25px; }\\n\\n:host {\\n  text-align: center; }\\n\\n.dynamic-form {\\n  width: 600px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ContactsService } from \"../../services/contacts.service\";\nimport { Router } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\nimport { newContact } from '../../actions/contacts.actions';\n\n@Component({\n  selector: 'app-add-contact',\n  templateUrl: './add-contact.component.html',\n  styleUrls: ['./add-contact.component.scss'],\n  providers: [ContactsService]\n})\nexport class AddContactComponent implements OnInit {\n  contact = {\n    name: {\n      label: 'Name',\n      value: '',\n      type: 'text',\n      validators: {\n        required: true\n      }\n    },\n    gender: {\n      label: 'Gender',\n      value: 'M',\n      type: 'radio',\n      options: [{ label: 'Male', value: 'M' }, { label: 'Female', value: 'F' }]\n    },\n    age: {\n      label: 'Age',\n      value: '',\n      type: 'number',\n      validators: {\n        min: 18\n      }\n    },\n    email: {\n      label: 'Email',\n      value: '',\n      type: 'email',\n      validators: {\n        required: true,\n        email: true\n      }\n    },\n    city: {\n      label: 'City',\n      value: 'ISL',\n      type: 'select',\n      options: [\n        { label: '--select--', value: '' },\n        { label: 'Islamabad', value: 'ISL' },\n        { label: 'Lahore', value: 'LHR' },\n        { label: 'Rawalpindi', value: 'RWP' }\n      ]\n    },\n    country: {\n      label: 'Country',\n      value: 'PK',\n      type: 'select',\n      options: [\n        { label: '--select--', value: '' },\n        { label: 'Pakistan', value: 'PK' },\n        { label: 'United States', value: 'USA' },\n        { label: 'Germany', value: 'GER' }\n      ]\n    }\n  };\n  constructor(private contactsService: ContactsService, private router: Router, private store: Store<any>) { }\n\n  ngOnInit() {\n  }\n\n  onContactSave(data) {\n    this.store.dispatch(newContact(data));\n    this.router.navigate(['/contacts']);\n\n    // this.contactsService.add(data).then(result => {\n    //   if (result) {\n    //     this.router.navigate(['/contacts']);\n    //   }\n    // });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\n\nimport { AddContactComponent } from './add-contact/add-contact.component';\nimport { DynamicFormComponent } from '../components/dynamic-form/dynamic-form.component';\nimport { RouterModule } from '@angular/router';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    RouterModule\n  ],\n  declarations: [AddContactComponent, DynamicFormComponent]\n})\nexport class AddEditContactsModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ViewContactsComponent } from './view-contacts/view-contacts-component/view-contacts.component';\nimport { AddContactComponent } from './add-edit-contacts/add-contact/add-contact.component';\n\n\nconst routes: Routes = [\n  { path: 'new-contact', component: AddContactComponent },\n  { path: 'contacts', component: ViewContactsComponent },\n  { path: '', redirectTo: '/contacts', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"app-container mat-app-background basic-container\\\">\\n  <app-nav-bar></app-nav-bar>\\n  <h1 class=\\\"mat-display-1 app-title\\\">Welcome to {{ title }}!</h1>  \\n  <router-outlet></router-outlet>\\n</div>\\n\"","module.exports = \".app-container {\\n  height: 100%;\\n  padding: 20px; }\\n  .app-container .app-title {\\n    margin-top: 25px;\\n    margin-bottom: 25px; }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Manage Contacts';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ViewContactsModule } from './view-contacts/view-contacts.module';\nimport { AddEditContactsModule } from './add-edit-contacts/add-edit-contacts.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { MaterialModule } from './material.module';\n\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport appReducer from './reducers';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    ViewContactsModule,\n    AddEditContactsModule,\n    AppRoutingModule,\n    StoreModule.forRoot({ app: appReducer }),\n    StoreDevtoolsModule.instrument({ maxAge: 10, }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"data-table-component\\\">\\n  <mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n    <div class=\\\"spinner-container\\\" *ngIf=\\\"loading\\\">\\n      <mat-spinner class=\\\"loading-spinner\\\"></mat-spinner>\\n    </div>\\n    <table *ngIf=\\\"!loading\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\n\\n      <!-- ID Column -->\\n      <ng-container *ngFor=\\\"let col of columns\\\" [matColumnDef]=\\\"col.id\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{col.label}} </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row[col.id]}} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n      </tr>\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n  </div>\\n</div>\"","module.exports = \".data-table-component {\\n  width: 100%; }\\n  .data-table-component table {\\n    width: 100%; }\\n  .data-table-component mat-form-field {\\n    width: 100%; }\\n  .data-table-component .spinner-container {\\n    display: flex;\\n    justify-content: center;\\n    height: 200px;\\n    align-items: center; }\\n\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource, Sort } from '@angular/material';\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  color: string;\n}\n@Component({\n  selector: 'app-data-table',\n  templateUrl: './data-table.component.html',\n  styleUrls: ['./data-table.component.scss']\n})\nexport class DataTableComponent implements OnInit {\n  @Input() data;\n  @Input() loading;\n  @Input() dataSource;\n  \n  @Input() displayedColumns: string[] = [];\n  @Input() columns: any[] = [];\n  sortedData = [];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  sortedDataSource = null;\n  \n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    \n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  sortData(sort: Sort) {\n    \n    const data = this.dataSource.filteredData.slice();\n    if (!sort.active || sort.direction === '') {\n      return;\n    }\n\n    const sortedData = data.sort((a, b) => {\n      const isAsc = sort.direction === 'asc';\n      const attr = sort.active;\n      return compare(a[sort.active], b[sort.active], isAsc);\n    });\n    this.dataSource = new MatTableDataSource(sortedData || []);\n    }\n}\n\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"dynamic-form-component\\\" #formId=\\\"ngForm\\\">\\n\\n  <div *ngFor=\\\"let prop of contactProps\\\">\\n    <div [ngSwitch]=\\\"prop.type\\\">\\n\\n      <mat-form-field *ngSwitchCase=\\\"'text'\\\">\\n        <input matInput placeholder=\\\"{{ prop.label }}\\\" [type]=\\\"prop.type\\\" [formControlName]=\\\"prop.key\\\">\\n        <mat-error *ngIf=\\\"isInValid(prop.key)\\\">{{getErrorMessage(prop.key)}}</mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field *ngSwitchCase=\\\"'number'\\\">\\n        <input matInput placeholder=\\\"{{ prop.label }}\\\" [type]=\\\"prop.type\\\" [formControlName]=\\\"prop.key\\\">\\n        <mat-error *ngIf=\\\"isInValid(prop.key)\\\">{{getErrorMessage(prop.key)}}</mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field *ngSwitchCase=\\\"'email'\\\">\\n        <input matInput placeholder=\\\"{{ prop.label }}\\\" [type]=\\\"prop.type\\\" [formControlName]=\\\"prop.key\\\">\\n        <mat-error *ngIf=\\\"isInValid(prop.key)\\\">{{getErrorMessage(prop.key)}}</mat-error>\\n      </mat-form-field>\\n      <div  class=\\\"radio-group\\\">\\n        <div *ngSwitchCase=\\\"'radio'\\\">\\n          <label class=\\\"mat-input\\\">{{ prop.label }} : </label>\\n          <mat-radio-group [formControlName]=\\\"prop.key\\\">\\n            <mat-radio-button *ngFor=\\\"let option of prop.options\\\" [value]=\\\"option.value\\\">{{ option.label }}</mat-radio-button>\\n          </mat-radio-group>\\n        </div>\\n      </div>\\n\\n      <mat-form-field *ngSwitchCase=\\\"'select'\\\">\\n        <mat-select placeholder=\\\"{{ prop.label }}\\\" [formControlName]=\\\"prop.key\\\">\\n          <mat-option *ngFor=\\\"let option of prop.options\\\" [value]=\\\"option.value\\\"> {{ option.label }}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-actions\\\">\\n    <button type=\\\"submit\\\" mat-raised-button routerLink=\\\".\\\" color=\\\"primary\\\" [disabled]='!formId.form.valid'>Save</button>\\n  </div>\\n</form>\"","module.exports = \".dynamic-form-component .radio-group {\\n  text-align: initial;\\n  display: flex;\\n  justify-content: center;\\n  margin-bottom: 15px; }\\n  .dynamic-form-component .radio-group mat-radio-button {\\n    margin-left: 10px; }\\n  .dynamic-form-component .radio-group > div {\\n    width: 300px; }\\n  .dynamic-form-component .form-action {\\n  text-align: left; }\\n  .dynamic-form-component .mat-form-field {\\n  width: 300px; }\\n\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-dynamic-form',\n  templateUrl: './dynamic-form.component.html',\n  styleUrls: ['./dynamic-form.component.scss']\n})\nexport class DynamicFormComponent implements OnInit {\n\n  form: FormGroup;\n  formFieldControls = {};\n  contactProps = [];\n  \n  @Input() formSchema;\n  @Output() submitForm: EventEmitter<any> = new EventEmitter();\n\n  ngOnInit() {\n    for (const prop of Object.keys(this.formSchema)) {\n      this.formFieldControls[prop] = new FormControl(\n        this.formSchema[prop].value,\n        this.mapValidator(this.formSchema[prop].validators)\n      );\n\n      this.contactProps.push({\n        key: prop,\n        label: this.formSchema[prop].label,\n        type: this.formSchema[prop].type,\n        options: this.formSchema[prop].options\n      });\n    }\n\n    this.form = new FormGroup(this.formFieldControls);\n  }\n\n  isInValid(key) {\n    const fieldControl = this.formFieldControls[key];\n    return fieldControl.invalid && (fieldControl.dirty || fieldControl.touched);\n  }\n\n  getErrorMessage(key) {\n    return this.formFieldControls[key].hasError('required') ? 'You must enter a value' :\n      this.formFieldControls[key].hasError('email') ? 'Not a valid email' :\n      this.formFieldControls[key].hasError('min') ? `You have to provide a value greater or\n      equal to ${this.formFieldControls[key].errors.min.min}` :\n        '';\n  }\n\n  mapValidator(validators) {\n    if (validators) {\n      return Object.keys(validators).map(validationType => {\n        if (validationType === 'required') {\n          return Validators.required;\n        } else if (validationType === 'min') {\n          return Validators.min(validators[validationType]);\n        } else if (validationType === 'email') {\n          return Validators.email;\n        }\n      });\n    } else {\n      return [];\n    }\n  }\n\n  onSubmit(){\n    this.submitForm.emit(this.form.value);\n  }\n}\n","module.exports = \"<div class=\\\"nav-bar\\\">\\n  <mat-toolbar color=\\\"primary\\\" class=\\\"app-bar-container\\\">\\n    <img src=\\\"assets/logo.png\\\" class=\\\"app-logo\\\" />\\n    <nav mat-tab-nav-bar class=\\\"app-tabs\\\">\\n      <a mat-tab-link *ngFor=\\\"let link of ['Contacts', 'New Contact']\\\" [routerLink]=\\\"getPath(link)\\\" routerLinkActive #rla=\\\"routerLinkActive\\\"\\n        [active]=\\\"rla.isActive\\\">\\n        {{link}}\\n      </a>\\n    </nav>\\n    <div class=\\\"user-buttons\\\">\\n      <a mat-raised-button color=\\\"accent\\\" href=\\\"https://github.com/shahzad31/ManageContacts\\\" target=\\\"_blank\\\">\\n        Github\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">face</mat-icon>\\n      </a>\\n      <a mat-raised-button color=\\\"accent\\\" href=\\\"https://www.linkedin.com/in/shahzad31/\\\" target=\\\"_blank\\\">\\n        LinkedIn\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">notifications</mat-icon>\\n      </a>\\n    </div>\\n  </mat-toolbar>\\n</div>\"","module.exports = \".nav-bar .app-bar-container {\\n  background: #6f6e6e;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center; }\\n  .nav-bar .app-bar-container .app-tabs {\\n    margin: 0 130px;\\n    flex: 2;\\n    border-bottom-width: 0; }\\n  .nav-bar .app-bar-container .app-tabs ::ng-deep .mat-tab-link {\\n      padding: 0;\\n      min-width: 116px; }\\n  .nav-bar .app-bar-container .user-buttons a {\\n    margin-left: 16px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  isHandset$: Observable<Boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {\n  }\n\n  getPath(link) {\n    return link.replace(/\\s+/g, '-').toLowerCase();\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\n\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n  MatFormFieldModule\n} from '@angular/material';\n@NgModule({\n  imports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatFormFieldModule\n  ],\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatFormFieldModule,\n  ]\n})\nexport class MaterialModule { }\n","import { Action } from '@ngrx/store';\nimport { SET_CONTACTS, NEW_CONTACT, UPDATE_CONTACT, REMOVE_CONTACT } from '../actions/contacts.actions';\nimport { addContactToStorage } from './utils';\nexport const RESET = 'RESET';\n\nconst initialState = {\n  list: []\n};\n\nexport function contactReducer(state: any = initialState, action) {\n  switch (action.type) {\n    case SET_CONTACTS:\n      return { ...state, list: action.payload };\n\n    case NEW_CONTACT:\n      const newContact = action.payload;\n      addContactToStorage(newContact);\n      return {};\n\n    case UPDATE_CONTACT:\n      return state;\n\n    case REMOVE_CONTACT:\n      return state;\n\n    case RESET:\n      return 0;\n\n    default:\n      return state;\n  }\n}","import { combineReducers } from '@ngrx/store';\nimport { contactReducer} from './contacts';\nimport { uiReducer} from './ui';\n\nconst appReducer = combineReducers({\n  contact: contactReducer,\n  ui: uiReducer,\n});\n\nexport default appReducer;","import { Action } from '@ngrx/store';\n\nexport const INCREMENT = 'INCREMENT';\nexport const DECREMENT = 'DECREMENT';\nexport const RESET = 'RESET';\n\nconst initialState = 0;\n\nexport function uiReducer(state: number = initialState, action: Action) {\n  switch (action.type) {\n    case INCREMENT:\n      return state + 1;\n\n    case DECREMENT:\n      return state - 1;\n\n    case RESET:\n      return 0;\n\n    default:\n      return state;\n  }\n}","// import CreateDataSource from '../../../libs/contactdatasource'\nimport CreateDataSource from 'contactsdatasource';\n\nconst LOCAL_STORAGE = 'localStorage';\n\nconst dataSource = CreateDataSource('contacts', LOCAL_STORAGE);\nconst store = dataSource.createStore();\n\nexport const addContactToStorage = (data) => {\n  dataSource.addContact(data);\n}\n\nexport const getContactsList = (data) => {\n\n}","import {Injectable} from '@angular/core';\nimport { Store, select } from '@ngrx/store';\n\n// import CreateDataSource from '../../../libs/contactdatasource'\nimport CreateDataSource from 'contactsdatasource';\nconst LOCAL_STORAGE = 'localStorage';\n@Injectable()\nexport class ContactsService {\n  contacts: any;\n  store: any;\n  dataSource: any;\n  constructor(private rxStore: Store<any>){\n   this.dataSource = CreateDataSource('contacts', LOCAL_STORAGE);\n    this.store = this.dataSource.createStore();\n  }\n\n  add(data){\n    return this.dataSource.addContact(data);\n  }\n}","module.exports = \"<div class=\\\"contact-list\\\">\\n  <app-data-table [loading] = 'loading' [columns]=\\\"columns\\\" [dataSource]=\\\"dataSource\\\" [displayedColumns]='displayedColumns'></app-data-table>\\n  <button class=\\\"new-btn\\\" mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"['/new-contact']\\\">New Contact</button>\\n</div>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd,\\nth {\\n  width: 25%; }\\n\\n.new-btn {\\n  margin-top: 15px;\\n  float: right; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router'\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { ContactsService } from \"../../services/contacts.service\";\nimport { Contact } from \"../../models/contact.model\";\n\n@Component({\n  selector: 'app-view-contacts',\n  templateUrl: './view-contacts.component.html',\n  styleUrls: ['./view-contacts.component.scss'],\n  providers: [ContactsService]\n})\nexport class ViewContactsComponent implements OnInit {\n\n  displayedColumns: string[] = ['id', 'name', 'age', 'email', 'city'];\n  loading: boolean = true;\n\n  columns = [\n    { id: 'id', label: 'ID' },\n    { id: 'name', label: 'Name' },\n    { id: 'age', label: 'Age' },\n    { id: 'gender', label: 'Gender' },\n    { id: 'address', label: 'Address' },\n    { id: 'city', label: 'City' },\n    { id: 'country', label: 'Country' },\n    { id: 'email', label: 'Email' }\n  ]\n\n  dataSource: MatTableDataSource<Contact>;\n\n\n  constructor(private contactsService: ContactsService) {\n    this.dataSource = new MatTableDataSource([]);\n  }\n\n  ngOnInit() {\n    // TODO: show and hide loader on contacts loading\n    this.contactsService.store.then((result) => {\n      this.loading = false;\n      this.dataSource = new MatTableDataSource(result.contacts || []);\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../material.module';\nimport { ViewContactsComponent } from './view-contacts-component/view-contacts.component';\n\nimport { DataTableComponent } from '../components/data-table/data-table.component';\nimport { RouterModule } from '@angular/router';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule,\n    RouterModule\n  ],\n  declarations: [ViewContactsComponent, DataTableComponent]\n})\nexport class ViewContactsModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}