{"version":3,"sources":["ng://contact-list/lib/service/contact-list.service.ts","ng://contact-list/lib/contact-list-component/contact-list.component.ts","ng://contact-list/lib/material.module.ts","ng://contact-list/lib/contact-list.module.ts"],"names":["ContactListService","rxStore","this","dataSource","CreateDataSource","store","createStore","prototype","add","data","addContact","Injectable","args","providedIn","Store","ContactListComponent","contactsService","id","label","MatTableDataSource","ngOnInit","_this","then","result","loading","contacts","applyFilter","filterValue","filter","trim","toLowerCase","paginator","firstPage","Component","selector","template","styles","providers","MaterialModule","NgModule","imports","CdkTableModule","CdkTreeModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatStepperModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","MatFormFieldModule","exports","ContactListModule","CommonModule","BrowserModule","FormsModule","RouterModule","CommonComponentsModule","declarations"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\n\nimport CreateDataSource from 'contactsdatasource';\nconst LOCAL_STORAGE = 'localStorage';\n\n@Injectable({\n  providedIn: 'root'\n}) export class ContactListService {\n  contacts: any;\n  store: any;\n  dataSource: any;\n  constructor(private rxStore: Store<any>) {\n    this.dataSource = CreateDataSource('contacts', LOCAL_STORAGE);\n    this.store = this.dataSource.createStore();\n  }\n\n  add(data) {\n    return this.dataSource.addContact(data);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {  MatTableDataSource } from '@angular/material';\nimport { ContactListService } from '../service/contact-list.service';\nimport { Contact } from '../model/contact.model';\n\n@Component({\n  selector: 'ht-contact-list',\n  template: `<div class=\"contact-list\">\n  <ht-data-table [loading]='loading' [columns]=\"columns\" [dataSource]=\"dataSource\" [displayedColumns]='displayedColumns'></ht-data-table>\n  <button class=\"new-btn\" mat-raised-button color=\"warn\">Delete Contacts\n    <mat-icon>delete</mat-icon>\n  </button>\n  <button class=\"new-btn\" mat-raised-button color=\"accent\" [routerLink]=\"['/new-contact']\">Edit Contact\n    <mat-icon>edit</mat-icon>\n  </button>\n  <button class=\"new-btn\" mat-raised-button color=\"primary\" [routerLink]=\"['/new-contact']\">New Contact\n    <mat-icon>create_new_folder</mat-icon>\n  </button>\n</div>`,\n  styles: [`table{width:100%}.mat-form-field{font-size:14px;width:100%}td,th{width:25%}.new-btn{margin-top:15px;margin-left:15px;float:right}`],\n  providers: [ContactListService]\n})\nexport class ContactListComponent implements OnInit {\n\n  displayedColumns: string[] = ['select', 'id', 'name', 'age', 'email', 'city'];\n  loading = true;\n\n  columns = [\n    { id: 'id', label: 'ID' },\n    { id: 'name', label: 'Name' },\n    { id: 'age', label: 'Age' },\n    { id: 'gender', label: 'Gender' },\n    { id: 'address', label: 'Address' },\n    { id: 'city', label: 'City' },\n    { id: 'country', label: 'Country' },\n    { id: 'email', label: 'Email' }\n  ];\n\n  dataSource: MatTableDataSource<Contact>;\n\n\n  constructor(private contactsService: ContactListService) {\n    this.dataSource = new MatTableDataSource([]);\n  }\n\n  ngOnInit() {\n    // TODO: show and hide loader on contacts loading\n    this.contactsService.store.then((result) => {\n      this.loading = false;\n      this.dataSource = new MatTableDataSource(result.contacts || []);\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\n\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n  MatFormFieldModule\n} from '@angular/material';\n@NgModule({\n  imports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatFormFieldModule\n  ],\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatFormFieldModule,\n  ]\n})\nexport class MaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ContactListComponent } from './contact-list-component/contact-list.component';\nimport { MaterialModule } from './material.module';\nimport { CommonComponentsModule } from 'ht-common-components/dist';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    FormsModule,\n    RouterModule,\n    MaterialModule,\n    CommonComponentsModule\n  ],\n  declarations: [ContactListComponent],\n  exports: [ContactListComponent]\n})\nexport class ContactListModule { }\n"]}