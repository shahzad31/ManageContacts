!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@ngrx/store"),require("contactsdatasource"),require("@angular/material"),require("@angular/cdk/table"),require("@angular/cdk/tree"),require("@angular/common"),require("@angular/platform-browser"),require("@angular/forms"),require("@angular/router"),require("ht-common-components/dist")):"function"==typeof define&&define.amd?define("contact-list",["exports","@angular/core","@ngrx/store","contactsdatasource","@angular/material","@angular/cdk/table","@angular/cdk/tree","@angular/common","@angular/platform-browser","@angular/forms","@angular/router","ht-common-components/dist"],e):e(t["contact-list"]={},t.ng.core,null,null,t.ng.material,t.ng.cdk.table,t.ng.cdk.tree,t.ng.common,t.ng.platformBrowser,t.ng.forms,t.ng.router,null)}(this,function(t,e,o,a,r,n,l,d,u,i,M,c){"use strict";a=a&&a.hasOwnProperty("default")?a["default"]:a;var s=function(){function t(t){this.rxStore=t,this.dataSource=a("contacts","localStorage"),this.store=this.dataSource.createStore()}return t.prototype.add=function(t){return this.dataSource.addContact(t)},t.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:o.Store}]},t.ngInjectableDef=e.defineInjectable({factory:function(){return new t(e.inject(o.Store))},token:t,providedIn:"root"}),t}(),p=function(){function t(t){this.contactsService=t,this.displayedColumns=["select","id","name","age","email","city"],this.loading=!0,this.columns=[{id:"id",label:"ID"},{id:"name",label:"Name"},{id:"age",label:"Age"},{id:"gender",label:"Gender"},{id:"address",label:"Address"},{id:"city",label:"City"},{id:"country",label:"Country"},{id:"email",label:"Email"}],this.dataSource=new r.MatTableDataSource([])}return t.prototype.ngOnInit=function(){var e=this;this.contactsService.store.then(function(t){e.loading=!1,e.dataSource=new r.MatTableDataSource(t.contacts||[])})},t.prototype.applyFilter=function(t){this.dataSource.filter=t.trim().toLowerCase(),this.dataSource.paginator&&this.dataSource.paginator.firstPage()},t.decorators=[{type:e.Component,args:[{selector:"ht-contact-list",template:'<div class="contact-list">\n  <ht-data-table [loading]=\'loading\' [columns]="columns" [dataSource]="dataSource" [displayedColumns]=\'displayedColumns\'></ht-data-table>\n  <button class="new-btn" mat-raised-button color="warn">Delete Contacts\n    <mat-icon>delete</mat-icon>\n  </button>\n  <button class="new-btn" mat-raised-button color="accent" [routerLink]="[\'/new-contact\']">Edit Contact\n    <mat-icon>edit</mat-icon>\n  </button>\n  <button class="new-btn" mat-raised-button color="primary" [routerLink]="[\'/new-contact\']">New Contact\n    <mat-icon>create_new_folder</mat-icon>\n  </button>\n</div>',styles:["table{width:100%}.mat-form-field{font-size:14px;width:100%}td,th{width:25%}.new-btn{margin-top:15px;margin-left:15px;float:right}"],providers:[s]}]}],t.ctorParameters=function(){return[{type:s}]},t}(),m=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{imports:[n.CdkTableModule,l.CdkTreeModule,r.MatAutocompleteModule,r.MatBadgeModule,r.MatBottomSheetModule,r.MatButtonModule,r.MatButtonToggleModule,r.MatCardModule,r.MatCheckboxModule,r.MatChipsModule,r.MatDatepickerModule,r.MatDialogModule,r.MatDividerModule,r.MatExpansionModule,r.MatGridListModule,r.MatIconModule,r.MatInputModule,r.MatListModule,r.MatMenuModule,r.MatNativeDateModule,r.MatPaginatorModule,r.MatProgressBarModule,r.MatProgressSpinnerModule,r.MatRadioModule,r.MatRippleModule,r.MatSelectModule,r.MatSidenavModule,r.MatSliderModule,r.MatSlideToggleModule,r.MatSnackBarModule,r.MatSortModule,r.MatStepperModule,r.MatTableModule,r.MatTabsModule,r.MatToolbarModule,r.MatTooltipModule,r.MatTreeModule,r.MatFormFieldModule],exports:[n.CdkTableModule,l.CdkTreeModule,r.MatAutocompleteModule,r.MatBadgeModule,r.MatBottomSheetModule,r.MatButtonModule,r.MatButtonToggleModule,r.MatCardModule,r.MatCheckboxModule,r.MatChipsModule,r.MatDatepickerModule,r.MatDialogModule,r.MatDividerModule,r.MatExpansionModule,r.MatGridListModule,r.MatIconModule,r.MatInputModule,r.MatListModule,r.MatMenuModule,r.MatNativeDateModule,r.MatPaginatorModule,r.MatProgressBarModule,r.MatProgressSpinnerModule,r.MatRadioModule,r.MatRippleModule,r.MatSelectModule,r.MatSidenavModule,r.MatSliderModule,r.MatSlideToggleModule,r.MatSnackBarModule,r.MatSortModule,r.MatStepperModule,r.MatTableModule,r.MatTabsModule,r.MatToolbarModule,r.MatTooltipModule,r.MatTreeModule,r.MatFormFieldModule]}]}],t}(),g=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{imports:[d.CommonModule,u.BrowserModule,i.FormsModule,M.RouterModule,m,c.CommonComponentsModule],declarations:[p],exports:[p]}]}],t}();t.ContactListService=s,t.ContactListComponent=p,t.ContactListModule=g,t.Éµa=m,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=contact-list.umd.min.js.map