{"version":3,"sources":["ng://ht-contact-add-edit/lib/service/contact-list.service.ts","ng://ht-contact-add-edit/lib/new-contact/new-contact.component.ts","ng://ht-contact-add-edit/lib/material.module.ts","ng://ht-contact-add-edit/lib/contact-add-edit.module.ts"],"names":["ContactAddEditService","this","dataSource","CreateDataSource","store","createStore","prototype","add","data","addContact","Injectable","args","providedIn","NewContactComponent","contactsService","EventEmitter","name","label","value","type","validators","required","gender","options","age","min","email","city","country","ngOnInit","onContactSave","_this","then","result","saveContact","emit","Component","selector","template","styles","providers","Output","MaterialModule","NgModule","imports","CdkTableModule","CdkTreeModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatStepperModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","MatFormFieldModule","exports","ContactAddEditModule","CommonModule","BrowserModule","FormsModule","CommonComponentsModule","declarations"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport CreateDataSource from 'contactsdatasource';\nconst LOCAL_STORAGE = 'localStorage';\n\n@Injectable({\n  providedIn: 'root'\n}) export class ContactAddEditService {\n  contacts: any;\n  store: any;\n  dataSource: any;\n  constructor() {\n    this.dataSource = CreateDataSource('contacts', LOCAL_STORAGE);\n    this.store = this.dataSource.createStore();\n  }\n\n  add(data) {\n    return this.dataSource.addContact(data);\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ContactAddEditService } from '../service/contact-list.service';\n// import { newContact } from '../../actions/contacts.actions';\n\n@Component({\n  selector: 'ht-new-contact',\n  template: `<div class=\"dynamic-form\">\n  <ht-dynamic-form [formSchema]=\"contact\" (submitForm)=\"onContactSave($event)\"></ht-dynamic-form>\n</div>\n<button class=\"go-back-btn\" mat-raised-button>\n  <mat-icon aria-label=\"Example icon-button with a heart icon\">arrow_back</mat-icon>\n  Go Back\n</button>`,\n  styles: [`.go-back-btn{position:absolute;bottom:25px}:host{text-align:center}.dynamic-form{width:600px}`],\n  providers: [ContactAddEditService]\n})\nexport class NewContactComponent implements OnInit {\n  @Output() saveContact: EventEmitter<any> = new EventEmitter();\n  contact = {\n    name: {\n      label: 'Name',\n      value: '',\n      type: 'text',\n      validators: {\n        required: true\n      }\n    },\n    gender: {\n      label: 'Gender',\n      value: 'M',\n      type: 'radio',\n      options: [{ label: 'Male', value: 'M' }, { label: 'Female', value: 'F' }]\n    },\n    age: {\n      label: 'Age',\n      value: '',\n      type: 'number',\n      validators: {\n        min: 18\n      }\n    },\n    email: {\n      label: 'Email',\n      value: '',\n      type: 'email',\n      validators: {\n        required: true,\n        email: true\n      }\n    },\n    city: {\n      label: 'City',\n      value: 'ISL',\n      type: 'select',\n      options: [\n        { label: '--select--', value: '' },\n        { label: 'Islamabad', value: 'ISL' },\n        { label: 'Lahore', value: 'LHR' },\n        { label: 'Rawalpindi', value: 'RWP' }\n      ]\n    },\n    country: {\n      label: 'Country',\n      value: 'PK',\n      type: 'select',\n      options: [\n        { label: '--select--', value: '' },\n        { label: 'Pakistan', value: 'PK' },\n        { label: 'United States', value: 'USA' },\n        { label: 'Germany', value: 'GER' }\n      ]\n    }\n  };\n  constructor(private contactsService: ContactAddEditService) { }\n\n  ngOnInit() {\n  }\n\n  onContactSave(data) {\n    // this.store.dispatch(newContact(data));\n\n    this.contactsService.add(data).then(result => {\n      if (result) {\n        this.saveContact.emit(result);\n      }\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\n\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n  MatFormFieldModule\n} from '@angular/material';\n@NgModule({\n  imports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatFormFieldModule\n  ],\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatFormFieldModule,\n  ]\n})\nexport class MaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { NewContactComponent } from './new-contact/new-contact.component';\nimport { CommonComponentsModule } from 'ht-common-components/dist';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { MaterialModule } from './material.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    FormsModule,\n    MaterialModule,\n    CommonComponentsModule\n  ],\n  declarations: [NewContactComponent],\n  exports: [NewContactComponent]\n})\nexport class ContactAddEditModule { }\n"]}