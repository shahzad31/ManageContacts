{"version":3,"sources":["ng://ht-common-components/lib/common-components.service.ts","ng://ht-common-components/lib/common-components.component.ts","ng://ht-common-components/lib/components/dynamic-form/dynamic-form.component.ts","null","ng://ht-common-components/lib/components/navbar/navbar.component.ts","ng://ht-common-components/lib/components/data-table/data-table.component.ts","ng://ht-common-components/lib/material.module.ts","ng://ht-common-components/lib/common-components.module.ts"],"names":["CommonComponentsService","Injectable","args","providedIn","CommonComponentsComponent","prototype","ngOnInit","Component","selector","template","styles","EventEmitter","DynamicFormComponent","_a","__values","o","m","Symbol","iterator","i","call","next","length","value","done","tslib_1.__values","Object","keys","this","formSchema","_b","prop","formFieldControls","FormControl","mapValidator","validators","contactProps","push","key","label","type","options","form","FormGroup","isInValid","fieldControl","invalid","dirty","touched","getErrorMessage","hasError","errors","min","map","validationType","ValueValidators","required","email","onSubmit","submitForm","emit","Input","Output","NavbarComponent","breakpointObserver","observe","Breakpoints","Handset","pipe","result","matches","getPath","link","replace","toLowerCase","BreakpointObserver","DataTableComponent","SelectionModel","_this","dataSource","paginator","sort","selection","onChange","subscribe","changes","selectionChange","applyFilter","filterValue","filter","trim","firstPage","sortData","data","filteredData","slice","active","direction","sortedData","a","b","isAsc","compare","MatTableDataSource","isAllSelected","selected","masterToggle","clear","forEach","row","select","ViewChild","MatPaginator","MatSort","MaterialModule","NgModule","imports","CdkTableModule","CdkTreeModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatStepperModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","MatFormFieldModule","exports","CommonComponentsModule","CommonModule","BrowserModule","FormsModule","ReactiveFormsModule","RouterModule","declarations"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonComponentsService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ht-common-components',\n  template: `\n    <p>\n      common-components works!\n    </p>\n  `,\n  styles: []\n})\nexport class CommonComponentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators as ValueValidators } from '@angular/forms';\n\n@Component({\n  selector: 'ht-dynamic-form',\n  template: `<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"dynamic-form-component\" #formId=\"ngForm\">\n\n  <div *ngFor=\"let prop of contactProps\">\n    <div [ngSwitch]=\"prop.type\">\n\n      <mat-form-field *ngSwitchCase=\"'text'\">\n        <input matInput placeholder=\"{{ prop.label }}\" [type]=\"prop.type\" [formControlName]=\"prop.key\">\n        <mat-error *ngIf=\"isInValid(prop.key)\">{{getErrorMessage(prop.key)}}</mat-error>\n      </mat-form-field>\n\n      <mat-form-field *ngSwitchCase=\"'number'\">\n        <input matInput placeholder=\"{{ prop.label }}\" [type]=\"prop.type\" [formControlName]=\"prop.key\">\n        <mat-error *ngIf=\"isInValid(prop.key)\">{{getErrorMessage(prop.key)}}</mat-error>\n      </mat-form-field>\n\n      <mat-form-field *ngSwitchCase=\"'email'\">\n        <input matInput placeholder=\"{{ prop.label }}\" [type]=\"prop.type\" [formControlName]=\"prop.key\">\n        <mat-error *ngIf=\"isInValid(prop.key)\">{{getErrorMessage(prop.key)}}</mat-error>\n      </mat-form-field>\n      <div  class=\"radio-group\">\n        <div *ngSwitchCase=\"'radio'\">\n          <label class=\"mat-input\">{{ prop.label }} : </label>\n          <mat-radio-group [formControlName]=\"prop.key\">\n            <mat-radio-button *ngFor=\"let option of prop.options\" [value]=\"option.value\">{{ option.label }}</mat-radio-button>\n          </mat-radio-group>\n        </div>\n      </div>\n\n      <mat-form-field *ngSwitchCase=\"'select'\">\n        <mat-select placeholder=\"{{ prop.label }}\" [formControlName]=\"prop.key\">\n          <mat-option *ngFor=\"let option of prop.options\" [value]=\"option.value\"> {{ option.label }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n\n  <div class=\"form-actions\">\n    <button type=\"submit\" mat-raised-button routerLink=\".\" color=\"primary\" [disabled]='!formId.form.valid'>Save</button>\n  </div>\n</form>`,\n  styles: [`.dynamic-form-component .radio-group{text-align:initial;display:flex;justify-content:center;margin-bottom:15px}.dynamic-form-component .radio-group mat-radio-button{margin-left:10px}.dynamic-form-component .radio-group>div{width:300px}.dynamic-form-component .form-action{text-align:left}.dynamic-form-component .mat-form-field{width:300px}`]\n})\nexport class DynamicFormComponent implements OnInit {\n\n  form: FormGroup;\n  formFieldControls = {};\n  contactProps = [];\n\n  @Input() formSchema;\n  @Output() submitForm: EventEmitter<any> = new EventEmitter();\n\n  ngOnInit() {\n    for (const prop of Object.keys(this.formSchema)) {\n      this.formFieldControls[prop] = new FormControl(\n        this.formSchema[prop].value,\n        this.mapValidator(this.formSchema[prop].validators)\n      );\n\n      this.contactProps.push({\n        key: prop,\n        label: this.formSchema[prop].label,\n        type: this.formSchema[prop].type,\n        options: this.formSchema[prop].options\n      });\n    }\n\n    this.form = new FormGroup(this.formFieldControls);\n  }\n\n  isInValid(key) {\n    const fieldControl = this.formFieldControls[key];\n    return fieldControl.invalid && (fieldControl.dirty || fieldControl.touched);\n  }\n\n  getErrorMessage(key) {\n    return this.formFieldControls[key].hasError('required') ? 'You must enter a value' :\n      this.formFieldControls[key].hasError('email') ? 'Not a valid email' :\n        this.formFieldControls[key].hasError('min') ? `You have to provide a value greater or\n      equal to ${this.formFieldControls[key].errors.min.min}` :\n          '';\n  }\n\n  mapValidator(validators): any {\n    if (validators) {\n      return Object.keys(validators).map(validationType => {\n        if (validationType === 'required') {\n          return ValueValidators.required;\n        } else if (validationType === 'min') {\n          return ValueValidators.min(validators[validationType]);\n        } else if (validationType === 'email') {\n          return ValueValidators.email;\n        }\n      });\n    } else {\n      return [];\n    }\n  }\n\n  onSubmit() {\n    this.submitForm.emit(this.form.value);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'ht-nav-bar',\n  template: `<div class=\"nav-bar\">\n  <mat-toolbar color=\"primary\" class=\"app-bar-container\">\n    <img src=\"assets/logo.png\" class=\"app-logo\" />\n    <nav mat-tab-nav-bar class=\"app-tabs\">\n      <a mat-tab-link *ngFor=\"let link of ['Contacts', 'New Contact']\" [routerLink]=\"getPath(link)\" routerLinkActive #rla=\"routerLinkActive\"\n        [active]=\"rla.isActive\">\n        {{link}}\n      </a>\n    </nav>\n    <div class=\"user-buttons\">\n      <a mat-raised-button color=\"accent\" href=\"https://github.com/shahzad31/ManageContacts\" target=\"_blank\">\n        Github\n        <mat-icon aria-label=\"Example icon-button with a heart icon\">face</mat-icon>\n      </a>\n      <a mat-raised-button color=\"accent\" href=\"https://www.linkedin.com/in/shahzad31/\" target=\"_blank\">\n        LinkedIn\n        <mat-icon aria-label=\"Example icon-button with a heart icon\">notifications</mat-icon>\n      </a>\n    </div>\n  </mat-toolbar>\n</div>`,\n  styles: [`.nav-bar .app-bar-container{background:#6f6e6e;display:flex;flex-direction:row;justify-content:center}.nav-bar .app-bar-container .app-tabs{margin:0 130px;flex:2;border-bottom-width:0}.nav-bar .app-bar-container .app-tabs ::ng-deep .mat-tab-link{padding:0;min-width:116px}.nav-bar .app-bar-container .user-buttons a{margin-left:16px}`]\n})\nexport class NavbarComponent implements OnInit {\n\n  isHandset$: Observable<Boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {\n  }\n\n  getPath(link) {\n    return link.replace(/\\s+/g, '-').toLowerCase();\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n","import { Component, OnInit, ViewChild, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource, Sort, MatSortable } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n@Component({\n  selector: 'ht-data-table',\n  template: `<div class=\"data-table-component\">\n  <mat-form-field>\n    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n  </mat-form-field>\n\n  <div class=\"mat-elevation-z8\">\n    <div class=\"spinner-container\" *ngIf=\"loading\">\n      <mat-spinner class=\"loading-spinner\"></mat-spinner>\n    </div>\n    <table *ngIf=\"!loading\"  mat-table [dataSource]=\"dataSource\"\n     matSort (matSortChange)=\"sortData($event)\">\n\n        <ng-container matColumnDef=\"select\">\n          <th mat-header-cell *matHeaderCellDef>\n            <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\" [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n            </mat-checkbox>\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\">\n            </mat-checkbox>\n          </td>\n        </ng-container>\n\n      <ng-container *ngFor=\"let col of columns\" [matColumnDef]=\"col.id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{col.label}} </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row[col.id]}} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n      </tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n  </div>\n</div>`,\n  styles: [`.data-table-component,.data-table-component mat-form-field,.data-table-component table{width:100%}.data-table-component .spinner-container{display:flex;justify-content:center;height:200px;align-items:center}`]\n})\nexport class DataTableComponent implements OnInit {\n  @Input() data;\n  @Input() loading;\n  @Input() dataSource;\n  @Input() enableSelection = true;\n\n  @Input() displayedColumns: string[] = [];\n  @Input() columns: any[] = [];\n\n  @Output() selectionChange: EventEmitter<any> = new EventEmitter();\n\n  sortedData = [];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  selection = new SelectionModel<any>(true, []);\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.selection.onChange.subscribe(changes => {\n      this.selectionChange.emit(changes);\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  sortData(sort: Sort) {\n\n    const data = this.dataSource.filteredData.slice();\n    if (!sort.active || sort.direction === '') {\n      return;\n    }\n\n    const sortedData = data.sort((a, b) => {\n      const isAsc = sort.direction === 'asc';\n      const attr = sort.active;\n      return compare(a[sort.active], b[sort.active], isAsc);\n    });\n    this.dataSource = new MatTableDataSource(sortedData || []);\n  }\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n}\n\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { NgModule } from '@angular/core';\n\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\n\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n  MatFormFieldModule\n} from '@angular/material';\n@NgModule({\n  imports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatFormFieldModule\n  ],\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatFormFieldModule,\n  ]\n})\nexport class MaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { CommonComponentsComponent } from './common-components.component';\nimport { DynamicFormComponent } from './components/dynamic-form/dynamic-form.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { DataTableComponent } from './components/data-table/data-table.component';\nimport { MaterialModule } from './material.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    RouterModule\n  ],\n  declarations: [\n    CommonComponentsComponent,\n    DataTableComponent,\n    DynamicFormComponent,\n    NavbarComponent\n  ],\n  exports: [\n    CommonComponentsComponent,\n    DataTableComponent,\n    DynamicFormComponent,\n    NavbarComponent\n  ]\n})\nexport class CommonComponentsModule { }\n"]}