!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/forms"),require("@angular/cdk/layout"),require("rxjs/operators"),require("@angular/material"),require("@angular/cdk/collections"),require("@angular/cdk/table"),require("@angular/cdk/tree"),require("@angular/common"),require("@angular/platform-browser"),require("@angular/router")):"function"==typeof define&&define.amd?define("ht-common-components",["exports","@angular/core","@angular/forms","@angular/cdk/layout","rxjs/operators","@angular/material","@angular/cdk/collections","@angular/cdk/table","@angular/cdk/tree","@angular/common","@angular/platform-browser","@angular/router"],e):e(t["ht-common-components"]={},t.ng.core,t.ng.forms,t.ng.cdk.layout,t.rxjs.operators,t.ng.material,t.ng.cdk.collections,t.ng.cdk.table,t.ng.cdk.tree,t.ng.common,t.ng.platformBrowser,t.ng.router)}(this,function(t,e,l,o,a,r,n,i,d,u,s,c){"use strict";var p=function(){function t(){}return t.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[]},t.ngInjectableDef=e.defineInjectable({factory:function(){return new t},token:t,providedIn:"root"}),t}(),m=function(){function t(){}return t.prototype.ngOnInit=function(){},t.decorators=[{type:e.Component,args:[{selector:"ht-common-components",template:"\n    <p>\n      common-components works!\n    </p>\n  ",styles:[]}]}],t.ctorParameters=function(){return[]},t}();var M=function(){function t(){this.formFieldControls={},this.contactProps=[],this.submitForm=new e.EventEmitter}return t.prototype.ngOnInit=function(){try{for(var t=function r(t){var e="function"==typeof Symbol&&t[Symbol.iterator],o=0;return e?e.call(t):{next:function(){return t&&o>=t.length&&(t=void 0),{value:t&&t[o++],done:!t}}}}(Object.keys(this.formSchema)),e=t.next();!e.done;e=t.next()){var o=e.value;this.formFieldControls[o]=new l.FormControl(this.formSchema[o].value,this.mapValidator(this.formSchema[o].validators)),this.contactProps.push({key:o,label:this.formSchema[o].label,type:this.formSchema[o].type,options:this.formSchema[o].options})}}catch(i){a={error:i}}finally{try{e&&!e.done&&(n=t["return"])&&n.call(t)}finally{if(a)throw a.error}}var a,n;this.form=new l.FormGroup(this.formFieldControls)},t.prototype.isInValid=function(t){var e=this.formFieldControls[t];return e.invalid&&(e.dirty||e.touched)},t.prototype.getErrorMessage=function(t){return this.formFieldControls[t].hasError("required")?"You must enter a value":this.formFieldControls[t].hasError("email")?"Not a valid email":this.formFieldControls[t].hasError("min")?"You have to provide a value greater or\n      equal to "+this.formFieldControls[t].errors.min.min:""},t.prototype.mapValidator=function(e){return e?Object.keys(e).map(function(t){return"required"===t?l.Validators.required:"min"===t?l.Validators.min(e[t]):"email"===t?l.Validators.email:void 0}):[]},t.prototype.onSubmit=function(){this.submitForm.emit(this.form.value)},t.decorators=[{type:e.Component,args:[{selector:"ht-dynamic-form",template:'<form [formGroup]="form" (ngSubmit)="onSubmit()" class="dynamic-form-component" #formId="ngForm">\n\n  <div *ngFor="let prop of contactProps">\n    <div [ngSwitch]="prop.type">\n\n      <mat-form-field *ngSwitchCase="\'text\'">\n        <input matInput placeholder="{{ prop.label }}" [type]="prop.type" [formControlName]="prop.key">\n        <mat-error *ngIf="isInValid(prop.key)">{{getErrorMessage(prop.key)}}</mat-error>\n      </mat-form-field>\n\n      <mat-form-field *ngSwitchCase="\'number\'">\n        <input matInput placeholder="{{ prop.label }}" [type]="prop.type" [formControlName]="prop.key">\n        <mat-error *ngIf="isInValid(prop.key)">{{getErrorMessage(prop.key)}}</mat-error>\n      </mat-form-field>\n\n      <mat-form-field *ngSwitchCase="\'email\'">\n        <input matInput placeholder="{{ prop.label }}" [type]="prop.type" [formControlName]="prop.key">\n        <mat-error *ngIf="isInValid(prop.key)">{{getErrorMessage(prop.key)}}</mat-error>\n      </mat-form-field>\n      <div  class="radio-group">\n        <div *ngSwitchCase="\'radio\'">\n          <label class="mat-input">{{ prop.label }} : </label>\n          <mat-radio-group [formControlName]="prop.key">\n            <mat-radio-button *ngFor="let option of prop.options" [value]="option.value">{{ option.label }}</mat-radio-button>\n          </mat-radio-group>\n        </div>\n      </div>\n\n      <mat-form-field *ngSwitchCase="\'select\'">\n        <mat-select placeholder="{{ prop.label }}" [formControlName]="prop.key">\n          <mat-option *ngFor="let option of prop.options" [value]="option.value"> {{ option.label }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n\n  <div class="form-actions">\n    <button type="submit" mat-raised-button routerLink="." color="primary" [disabled]=\'!formId.form.valid\'>Save</button>\n  </div>\n</form>',styles:[".dynamic-form-component .radio-group{text-align:initial;display:flex;justify-content:center;margin-bottom:15px}.dynamic-form-component .radio-group mat-radio-button{margin-left:10px}.dynamic-form-component .radio-group>div{width:300px}.dynamic-form-component .form-action{text-align:left}.dynamic-form-component .mat-form-field{width:300px}"]}]}],t.propDecorators={formSchema:[{type:e.Input}],submitForm:[{type:e.Output}]},t}(),f=function(){function t(t){this.breakpointObserver=t,this.isHandset$=this.breakpointObserver.observe(o.Breakpoints.Handset).pipe(a.map(function(t){return t.matches}))}return t.prototype.getPath=function(t){return t.replace(/\s+/g,"-").toLowerCase()},t.prototype.ngOnInit=function(){},t.decorators=[{type:e.Component,args:[{selector:"ht-nav-bar",template:'<div class="nav-bar">\n  <mat-toolbar color="primary" class="app-bar-container">\n    <img src="assets/logo.png" class="app-logo" />\n    <nav mat-tab-nav-bar class="app-tabs">\n      <a mat-tab-link *ngFor="let link of [\'Contacts\', \'New Contact\']" [routerLink]="getPath(link)" routerLinkActive #rla="routerLinkActive"\n        [active]="rla.isActive">\n        {{link}}\n      </a>\n    </nav>\n    <div class="user-buttons">\n      <a mat-raised-button color="accent" href="https://github.com/shahzad31/ManageContacts" target="_blank">\n        Github\n        <mat-icon aria-label="Example icon-button with a heart icon">face</mat-icon>\n      </a>\n      <a mat-raised-button color="accent" href="https://www.linkedin.com/in/shahzad31/" target="_blank">\n        LinkedIn\n        <mat-icon aria-label="Example icon-button with a heart icon">notifications</mat-icon>\n      </a>\n    </div>\n  </mat-toolbar>\n</div>',styles:[".nav-bar .app-bar-container{background:#6f6e6e;display:flex;flex-direction:row;justify-content:center}.nav-bar .app-bar-container .app-tabs{margin:0 130px;flex:2;border-bottom-width:0}.nav-bar .app-bar-container .app-tabs ::ng-deep .mat-tab-link{padding:0;min-width:116px}.nav-bar .app-bar-container .user-buttons a{margin-left:16px}"]}]}],t.ctorParameters=function(){return[{type:o.BreakpointObserver}]},t}(),g=function(){function t(){this.enableSelection=!0,this.displayedColumns=[],this.columns=[],this.selectionChange=new e.EventEmitter,this.sortedData=[],this.selection=new n.SelectionModel(!0,[])}return t.prototype.ngOnInit=function(){var e=this;this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort,this.selection.onChange.subscribe(function(t){e.selectionChange.emit(t)})},t.prototype.applyFilter=function(t){this.dataSource.filter=t.trim().toLowerCase(),this.dataSource.paginator&&this.dataSource.paginator.firstPage()},t.prototype.sortData=function(n){var t=this.dataSource.filteredData.slice();if(n.active&&""!==n.direction){var e=t.sort(function(t,e){var o="asc"===n.direction;n.active;return function a(t,e,o){return(t<e?-1:1)*(o?1:-1)}(t[n.active],e[n.active],o)});this.dataSource=new r.MatTableDataSource(e||[])}},t.prototype.isAllSelected=function(){return this.selection.selected.length===this.dataSource.data.length},t.prototype.masterToggle=function(){var e=this;this.isAllSelected()?this.selection.clear():this.dataSource.data.forEach(function(t){return e.selection.select(t)})},t.decorators=[{type:e.Component,args:[{selector:"ht-data-table",template:'<div class="data-table-component">\n  <mat-form-field>\n    <input matInput (keyup)="applyFilter($event.target.value)" placeholder="Filter">\n  </mat-form-field>\n\n  <div class="mat-elevation-z8">\n    <div class="spinner-container" *ngIf="loading">\n      <mat-spinner class="loading-spinner"></mat-spinner>\n    </div>\n    <table *ngIf="!loading"  mat-table [dataSource]="dataSource"\n     matSort (matSortChange)="sortData($event)">\n\n        <ng-container matColumnDef="select">\n          <th mat-header-cell *matHeaderCellDef>\n            <mat-checkbox (change)="$event ? masterToggle() : null" [checked]="selection.hasValue() && isAllSelected()" [indeterminate]="selection.hasValue() && !isAllSelected()">\n            </mat-checkbox>\n          </th>\n          <td mat-cell *matCellDef="let row">\n            <mat-checkbox (click)="$event.stopPropagation()" (change)="$event ? selection.toggle(row) : null" [checked]="selection.isSelected(row)">\n            </mat-checkbox>\n          </td>\n        </ng-container>\n\n      <ng-container *ngFor="let col of columns" [matColumnDef]="col.id">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{col.label}} </th>\n        <td mat-cell *matCellDef="let row"> {{row[col.id]}} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n      <tr mat-row *matRowDef="let row; columns: displayedColumns;">\n      </tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]="[5, 10, 25, 100]"></mat-paginator>\n  </div>\n</div>',styles:[".data-table-component,.data-table-component mat-form-field,.data-table-component table{width:100%}.data-table-component .spinner-container{display:flex;justify-content:center;height:200px;align-items:center}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={data:[{type:e.Input}],loading:[{type:e.Input}],dataSource:[{type:e.Input}],enableSelection:[{type:e.Input}],displayedColumns:[{type:e.Input}],columns:[{type:e.Input}],selectionChange:[{type:e.Output}],paginator:[{type:e.ViewChild,args:[r.MatPaginator]}],sort:[{type:e.ViewChild,args:[r.MatSort]}]},t}();var h=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{imports:[i.CdkTableModule,d.CdkTreeModule,r.MatAutocompleteModule,r.MatBadgeModule,r.MatBottomSheetModule,r.MatButtonModule,r.MatButtonToggleModule,r.MatCardModule,r.MatCheckboxModule,r.MatChipsModule,r.MatDatepickerModule,r.MatDialogModule,r.MatDividerModule,r.MatExpansionModule,r.MatGridListModule,r.MatIconModule,r.MatInputModule,r.MatListModule,r.MatMenuModule,r.MatNativeDateModule,r.MatPaginatorModule,r.MatProgressBarModule,r.MatProgressSpinnerModule,r.MatRadioModule,r.MatRippleModule,r.MatSelectModule,r.MatSidenavModule,r.MatSliderModule,r.MatSlideToggleModule,r.MatSnackBarModule,r.MatSortModule,r.MatStepperModule,r.MatTableModule,r.MatTabsModule,r.MatToolbarModule,r.MatTooltipModule,r.MatTreeModule,r.MatFormFieldModule],exports:[i.CdkTableModule,d.CdkTreeModule,r.MatAutocompleteModule,r.MatBadgeModule,r.MatBottomSheetModule,r.MatButtonModule,r.MatButtonToggleModule,r.MatCardModule,r.MatCheckboxModule,r.MatChipsModule,r.MatDatepickerModule,r.MatDialogModule,r.MatDividerModule,r.MatExpansionModule,r.MatGridListModule,r.MatIconModule,r.MatInputModule,r.MatListModule,r.MatMenuModule,r.MatNativeDateModule,r.MatPaginatorModule,r.MatProgressBarModule,r.MatProgressSpinnerModule,r.MatRadioModule,r.MatRippleModule,r.MatSelectModule,r.MatSidenavModule,r.MatSliderModule,r.MatSlideToggleModule,r.MatSnackBarModule,r.MatSortModule,r.MatStepperModule,r.MatTableModule,r.MatTabsModule,r.MatToolbarModule,r.MatTooltipModule,r.MatTreeModule,r.MatFormFieldModule]}]}],t}(),b=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{imports:[u.CommonModule,s.BrowserModule,l.FormsModule,l.ReactiveFormsModule,h,c.RouterModule],declarations:[m,g,M,f],exports:[m,g,M,f]}]}],t}();t.CommonComponentsService=p,t.CommonComponentsComponent=m,t.CommonComponentsModule=b,t.ɵb=g,t.ɵc=M,t.ɵd=f,t.ɵa=h,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ht-common-components.umd.min.js.map