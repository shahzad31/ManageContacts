{"version":3,"file":"ht-common-components.js.map","sources":["ng://ht-common-components/lib/common-components.service.ts","ng://ht-common-components/lib/common-components.component.ts","ng://ht-common-components/lib/components/dynamic-form/dynamic-form.component.ts","ng://ht-common-components/lib/components/navbar/navbar.component.ts","ng://ht-common-components/lib/components/data-table/data-table.component.ts","ng://ht-common-components/lib/material.module.ts","ng://ht-common-components/lib/common-components.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonComponentsService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ht-common-components',\n  template: `\n    <p>\n      common-components works!\n    </p>\n  `,\n  styles: []\n})\nexport class CommonComponentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators as ValueValidators } from '@angular/forms';\n\n@Component({\n  selector: 'ht-dynamic-form',\n  template: `<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"dynamic-form-component\" #formId=\"ngForm\">\n\n  <div *ngFor=\"let prop of contactProps\">\n    <div [ngSwitch]=\"prop.type\">\n\n      <mat-form-field *ngSwitchCase=\"'text'\">\n        <input matInput placeholder=\"{{ prop.label }}\" [type]=\"prop.type\" [formControlName]=\"prop.key\">\n        <mat-error *ngIf=\"isInValid(prop.key)\">{{getErrorMessage(prop.key)}}</mat-error>\n      </mat-form-field>\n\n      <mat-form-field *ngSwitchCase=\"'number'\">\n        <input matInput placeholder=\"{{ prop.label }}\" [type]=\"prop.type\" [formControlName]=\"prop.key\">\n        <mat-error *ngIf=\"isInValid(prop.key)\">{{getErrorMessage(prop.key)}}</mat-error>\n      </mat-form-field>\n\n      <mat-form-field *ngSwitchCase=\"'email'\">\n        <input matInput placeholder=\"{{ prop.label }}\" [type]=\"prop.type\" [formControlName]=\"prop.key\">\n        <mat-error *ngIf=\"isInValid(prop.key)\">{{getErrorMessage(prop.key)}}</mat-error>\n      </mat-form-field>\n      <div  class=\"radio-group\">\n        <div *ngSwitchCase=\"'radio'\">\n          <label class=\"mat-input\">{{ prop.label }} : </label>\n          <mat-radio-group [formControlName]=\"prop.key\">\n            <mat-radio-button *ngFor=\"let option of prop.options\" [value]=\"option.value\">{{ option.label }}</mat-radio-button>\n          </mat-radio-group>\n        </div>\n      </div>\n\n      <mat-form-field *ngSwitchCase=\"'select'\">\n        <mat-select placeholder=\"{{ prop.label }}\" [formControlName]=\"prop.key\">\n          <mat-option *ngFor=\"let option of prop.options\" [value]=\"option.value\"> {{ option.label }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n\n  <div class=\"form-actions\">\n    <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]='!formId.form.valid'>Save</button>\n  </div>\n</form>`,\n  styles: [`.dynamic-form-component .radio-group{text-align:initial;display:flex;justify-content:center;margin-bottom:15px}.dynamic-form-component .radio-group mat-radio-button{margin-left:10px}.dynamic-form-component .radio-group>div{width:300px}.dynamic-form-component .form-action{text-align:left}.dynamic-form-component .mat-form-field{width:300px}`]\n})\nexport class DynamicFormComponent implements OnInit {\n\n  form: FormGroup;\n  formFieldControls = {};\n  contactProps = [];\n\n  @Input() formSchema;\n  @Output() submitForm: EventEmitter<any> = new EventEmitter();\n\n  ngOnInit() {\n    for (const prop of Object.keys(this.formSchema)) {\n      this.formFieldControls[prop] = new FormControl(\n        this.formSchema[prop].value,\n        this.mapValidator(this.formSchema[prop].validators)\n      );\n\n      this.contactProps.push({\n        key: prop,\n        label: this.formSchema[prop].label,\n        type: this.formSchema[prop].type,\n        options: this.formSchema[prop].options\n      });\n    }\n\n    this.form = new FormGroup(this.formFieldControls);\n  }\n\n  isInValid(key) {\n    const fieldControl = this.formFieldControls[key];\n    return fieldControl.invalid && (fieldControl.dirty || fieldControl.touched);\n  }\n\n  getErrorMessage(key) {\n    return this.formFieldControls[key].hasError('required') ? 'You must enter a value' :\n      this.formFieldControls[key].hasError('email') ? 'Not a valid email' :\n        this.formFieldControls[key].hasError('min') ? `You have to provide a value greater or\n      equal to ${this.formFieldControls[key].errors.min.min}` :\n          '';\n  }\n\n  mapValidator(validators): any {\n    if (validators) {\n      return Object.keys(validators).map(validationType => {\n        if (validationType === 'required') {\n          return ValueValidators.required;\n        } else if (validationType === 'min') {\n          return ValueValidators.min(validators[validationType]);\n        } else if (validationType === 'email') {\n          return ValueValidators.email;\n        }\n      });\n    } else {\n      return [];\n    }\n  }\n\n  onSubmit() {\n    this.submitForm.emit(this.form.value);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'ht-nav-bar',\n  template: `<div class=\"nav-bar\">\n  <mat-toolbar color=\"primary\" class=\"app-bar-container\">\n    <img src=\"assets/logo.png\" class=\"app-logo\" />\n    <nav mat-tab-nav-bar class=\"app-tabs\">\n      <a mat-tab-link *ngFor=\"let link of ['Contacts', 'New Contact']\" [routerLink]=\"getPath(link)\" routerLinkActive #rla=\"routerLinkActive\"\n        [active]=\"rla.isActive\">\n        {{link}}\n      </a>\n    </nav>\n    <div class=\"user-buttons\">\n      <a mat-raised-button color=\"accent\" href=\"https://github.com/shahzad31/ManageContacts\" target=\"_blank\">\n        Github\n        <mat-icon aria-label=\"Example icon-button with a heart icon\">face</mat-icon>\n      </a>\n      <a mat-raised-button color=\"accent\" href=\"https://www.linkedin.com/in/shahzad31/\" target=\"_blank\">\n        LinkedIn\n        <mat-icon aria-label=\"Example icon-button with a heart icon\">notifications</mat-icon>\n      </a>\n    </div>\n  </mat-toolbar>\n</div>`,\n  styles: [`.nav-bar .app-bar-container{background:#6f6e6e;display:flex;flex-direction:row;justify-content:center}.nav-bar .app-bar-container .app-tabs{margin:0 130px;flex:2;border-bottom-width:0}.nav-bar .app-bar-container .app-tabs ::ng-deep .mat-tab-link{padding:0;min-width:116px}.nav-bar .app-bar-container .user-buttons a{margin-left:16px}`]\n})\nexport class NavbarComponent implements OnInit {\n\n  isHandset$: Observable<Boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {\n  }\n\n  getPath(link) {\n    return link.replace(/\\s+/g, '-').toLowerCase();\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n","import { Component, OnInit, ViewChild, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource, Sort, MatSortable } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n@Component({\n  selector: 'ht-data-table',\n  template: `<div class=\"data-table-component\">\n  <mat-form-field>\n    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n  </mat-form-field>\n\n  <div class=\"mat-elevation-z8\">\n    <div class=\"spinner-container\" *ngIf=\"loading\">\n      <mat-spinner class=\"loading-spinner\"></mat-spinner>\n    </div>\n    <table *ngIf=\"!loading\"  mat-table [dataSource]=\"dataSource\"\n     matSort (matSortChange)=\"sortData($event)\">\n\n        <ng-container matColumnDef=\"select\">\n          <th mat-header-cell *matHeaderCellDef>\n            <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\" [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n            </mat-checkbox>\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\">\n            </mat-checkbox>\n          </td>\n        </ng-container>\n\n      <ng-container *ngFor=\"let col of columns\" [matColumnDef]=\"col.id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{col.label}} </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row[col.id]}} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n      </tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n  </div>\n</div>`,\n  styles: [`.data-table-component,.data-table-component mat-form-field,.data-table-component table{width:100%}.data-table-component .spinner-container{display:flex;justify-content:center;height:200px;align-items:center}`]\n})\nexport class DataTableComponent implements OnInit {\n  @Input() data;\n  @Input() loading;\n  @Input() dataSource;\n  @Input() enableSelection = true;\n\n  @Input() displayedColumns: string[] = [];\n  @Input() columns: any[] = [];\n\n  @Output() selectionChange: EventEmitter<any> = new EventEmitter();\n\n  sortedData = [];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  selection = new SelectionModel<any>(true, []);\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.selection.onChange.subscribe(changes => {\n      this.selectionChange.emit(changes);\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  sortData(sort: Sort) {\n\n    const data = this.dataSource.filteredData.slice();\n    if (!sort.active || sort.direction === '') {\n      return;\n    }\n\n    const sortedData = data.sort((a, b) => {\n      const isAsc = sort.direction === 'asc';\n      const attr = sort.active;\n      return compare(a[sort.active], b[sort.active], isAsc);\n    });\n    this.dataSource = new MatTableDataSource(sortedData || []);\n  }\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n}\n\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { NgModule } from '@angular/core';\n\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\n\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n  MatFormFieldModule\n} from '@angular/material';\n@NgModule({\n  imports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatFormFieldModule\n  ],\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatFormFieldModule,\n  ]\n})\nexport class MaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { CommonComponentsComponent } from './common-components.component';\nimport { DynamicFormComponent } from './components/dynamic-form/dynamic-form.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { DataTableComponent } from './components/data-table/data-table.component';\nimport { MaterialModule } from './material.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    RouterModule\n  ],\n  declarations: [\n    CommonComponentsComponent,\n    DataTableComponent,\n    DynamicFormComponent,\n    NavbarComponent\n  ],\n  exports: [\n    CommonComponentsComponent,\n    DataTableComponent,\n    DynamicFormComponent,\n    NavbarComponent\n  ]\n})\nexport class CommonComponentsModule { }\n"],"names":["ValueValidators"],"mappings":"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"}
